# create_pr_body.py
import json

def create_pull_request_body():
    """L√™ o plano de remedia√ß√£o e gera o corpo do Pull Request em um arquivo."""
    
    try:
        with open("remediation_plan.json", 'r', encoding='utf-8') as f:
            plan = json.load(f)
    except FileNotFoundError:
        print("Erro: remediation_plan.json n√£o encontrado.")
        return

    # Extrai os detalhes do plano
    rule_id = plan.get('rule', 'N/A')
    file_to_fix = plan.get('file', 'N/A')
    vulnerable_code = plan.get('vulnerable_code', '# C√≥digo vulner√°vel n√£o encontrado')
    suggested_fix = plan.get('suggested_fix', '# Sugest√£o da IA n√£o encontrada')
    
    # Monta o corpo do PR no formato Markdown
    pr_body = f"""
### ü§ñ Remedia√ß√£o Autom√°tica por IA

Este Pull Request foi gerado automaticamente pelo Agente de Seguran√ßa para corrigir a vulnerabilidade **{rule_id}**.

**Arquivo Afetado:** `{file_to_fix}`
***
#### C√≥digo Vulner√°vel Identificado
```
{vulnerable_code}
```

#### Corre√ß√£o Sugerida pela IA
```
{suggested_fix}
```
***
**A√ß√£o Necess√°ria:** Por favor, revise a altera√ß√£o, execute os testes necess√°rios e aprove este Pull Request.

*Um relat√≥rio detalhado em PDF desta a√ß√£o est√° dispon√≠vel nos artefatos desta execu√ß√£o do workflow.*
"""

    # Salva o corpo em um arquivo
    with open("pr_body.md", "w", encoding='utf-8') as f:
        f.write(pr_body)

    print("‚úÖ Corpo do Pull Request (pr_body.md) gerado com sucesso.")


if __name__ == "__main__":
    create_pull_request_body()

