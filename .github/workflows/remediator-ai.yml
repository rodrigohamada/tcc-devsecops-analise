name: Agente de Remedia칞칚o com IA

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'URL do reposit칩rio p칰blico a ser escaneado e corrigido'
        required: true
        default: '[https://github.com/rodrigohamada/tcc-devsecops-analise](https://github.com/rodrigohamada/tcc-devsecops-analise)'

jobs:
  scan-and-remediate-bot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: 1. Checkout do c칩digo do Agente
        uses: actions/checkout@v4

      - name: 2. Instalar Ferramentas e Configurar PATH
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip gitleaks jq
          sudo pipx install semgrep
          echo "/opt/pipx_bin" >> $GITHUB_PATH
          pip install requests

      - name: 3. Clonar Reposit칩rio Alvo
        run: git clone ${{ github.event.inputs.repo_url }} target_repo --depth 1
      
      - name: 4. Executar Scans de Seguran칞a no Alvo
        run: |
          cd target_repo
          semgrep scan --config auto --json --output ../semgrep-output.json || true
          gitleaks detect --report-format json --report-path ../gitleaks-output.json || true
          docker run --rm -v $(pwd):/scan-target aquasec/trivy:latest fs --format json --output /scan-target/../trivy-output.json /scan-target || true

      - name: 5. Executar IA para Gerar Plano de Corre칞칚o
        id: remediation_step
        # CORRE칂츾O: Passa a chave secreta como uma vari치vel de ambiente para o script
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python3 intelligent_remediator.py
          if [ -f "remediation_plan.json" ]; then
            echo "plan_exists=true" >> $GITHUB_OUTPUT
          else
            echo "plan_exists=false" >> <span class="math-inline">GITHUB\_OUTPUT
fi
\- name\: 6\. Aplicar Corre칞칚o e Criar Pull Request
if\: steps\.remediation\_step\.outputs\.plan\_exists \=\= 'true'
run\: \|
REPO\_OWNER\=</span>(echo "<span class="math-inline">\{\{ github\.event\.inputs\.repo\_url \}\}" \| cut \-d'/' \-f4\)
REPO\_NAME\=</span>(echo "<span class="math-inline">\{\{ github\.event\.inputs\.repo\_url \}\}" \| cut \-d'/' \-f5 \| sed 's/\\\.git</span>//')
          
          FILE_TO_FIX=<span class="math-inline">\(jq \-r '\.file' remediation\_plan\.json\)
VULNERABLE\_CODE\_RAW\=</span>(jq -r '.vulnerable_code' remediation_plan.json)
          VULNERABLE_CODE_ESCAPED=$(printf '%s\n' "<span class="math-inline">VULNERABLE\_CODE\_RAW" \| sed 's\:\[\]\[\\\\/\.^</span>*]:\\&:g')
          SUGGESTED_FIX_RAW=<span class="math-inline">\(jq \-r '\.suggested\_fix' remediation\_plan\.json\)
SUGGESTED\_FIX\_ESCAPED\=</span>(printf '%s\n' "<span class="math-inline">SUGGESTED\_FIX\_RAW" \| sed 's\:\[\]\[\\\\/\.^</span>*]:\\&:g')
          RULE_ID=<span class="math-inline">\(jq \-r '\.rule' remediation\_plan\.json\)
git clone https\://x\-access\-token\:</span>{{ secrets.GITHUB_TOKEN }}@[github.com/<span class="math-inline">\]\(https\://github\.com/</span>){REPO_OWNER}/<span class="math-inline">\{REPO\_NAME\}\.git target\_repo\_pr
cd target\_repo\_pr
BRANCH\_NAME\="fix/ai\-remediation\-</span>{RULE_ID}"
          git checkout -b <span class="math-inline">BRANCH\_NAME
sed \-i "s\|</span>{VULNERABLE_CODE_ESCAPED}|<span class="math-inline">\{SUGGESTED\_FIX\_ESCAPED\}\|g" "</span>{FILE_TO_FIX}"
          
          git config --global user.name "DevSecOps AI Bot 游뱄"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "fix(security): Corre칞칚o autom치tica por IA para ${RULE_ID}"
          git push origin $BRANCH_NAME

          gh pr create \
            --title "[BOT] Corre칞칚o de Seguran칞a Sugerida por IA para <span class="math-inline">\{RULE\_ID\}" \\
\-\-body "Este PR foi gerado automaticamente pelo Agente de Remedia칞칚o\.\\n\\nA IA analisou a vulnerabilidade \*\*</span>{RULE_ID}** e sugeriu a seguinte corre칞칚o no arquivo \`${FILE_TO_FIX}\`:\n\n**Substituir:**\n\`\`\`\n${VULNERABLE_CODE_RAW}\n\`\`\`\n\n**Por:**\n\`\`\`\n${SUGGESTED_FIX_RAW}\n\`\`\`\n\nPor favor, revise, teste e aprove a altera칞칚o."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
