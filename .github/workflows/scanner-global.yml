name: Scanner de Seguran√ßa Universal

run-name: Varredura do reposit√≥rio ${{ github.event.inputs.url_repositorio }} por ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      url_repositorio:
        description: 'URL completa do reposit√≥rio GitHub p√∫blico a ser analisado'
        required: true
        default: ''

jobs:
  escanear-e-gerar-relatorio:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Extrair nome do reposit√≥rio
        run: |
          NOME_REPOSITORIO=$(basename ${{ github.event.inputs.url_repositorio }} .git)
          echo "NOME_REPOSITORIO=$NOME_REPOSITORIO" >> $GITHUB_ENV

      - name: 2. Validar URL do reposit√≥rio
        run: |
          if [[ "${{ github.event.inputs.url_repositorio }}" == *"/blob/"* ]]; then
            echo "::error::URL inv√°lida. Forne√ßa a URL principal do reposit√≥rio (ex: https://github.com/usuario/repositorio)"
            exit 1
          fi
          echo "‚úÖ URL v√°lida para an√°lise."

      - name: 3. Fazer checkout do c√≥digo do Scanner
        uses: actions/checkout@v4

      - name: 4. Instalar ferramentas necess√°rias
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip pandoc texlive-latex-base texlive-latex-extra \
            texlive-xetex texlive-fonts-recommended texlive-fonts-extra \
            texlive-plain-generic curl
          
          # Instalar ferramentas de seguran√ßa
          sudo pipx install semgrep
          curl -sSL https://raw.githubusercontent.com/gitleaks/gitleaks/master/install.sh | sudo bash
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

          # Instalar googletrans com permiss√£o para sobrescrever pacotes do sistema
          pip install --no-cache-dir --break-system-packages googletrans==4.0.0-rc1

      - name: 5. Clonar reposit√≥rio alvo
        run: |
          git clone ${{ github.event.inputs.url_repositorio }} repositorio_alvo --depth 1

      - name: 6. Executar Scans de Seguran√ßa
        run: |
          cd repositorio_alvo
          echo "üîç Executando Semgrep..."
          semgrep scan --config auto --json > ../saida-semgrep.json || true

          echo "üîê Executando Gitleaks..."
          gitleaks detect --report-format json --report-path ../saida-gitleaks.json || true

          echo "üì¶ Executando Trivy (SCA)..."
          trivy fs --security-checks vuln --format json \
            --output ../saida-trivy.json .

      - name: 7. Exibir resultados gerados
        run: |
          echo "üìÅ Listando arquivos gerados:"
          ls -lh .
          echo "üîç Primeiras linhas dos relat√≥rios:"
          head -n 15 saida-trivy.json || true
          head -n 10 saida-semgrep.json || true
          head -n 10 saida-gitleaks.json || true

      - name: 8. Instalar depend√™ncias do Python (se existirem)
        run: |
          if [ -f requirements.txt ]; then
            pip install --no-cache-dir --break-system-packages -r requirements.txt
          else
            echo "‚ö†Ô∏è Nenhum requirements.txt encontrado, continuando..."
          fi

      - name: 9. Gerar relat√≥rio em Markdown
        run: |
          python3 relatorio.py ${{ env.NOME_REPOSITORIO }}

      - name: 10. Converter relat√≥rio para PDF (XeLaTeX)
        run: |
          pandoc \
            -V geometry:"a4paper, margin=1in" \
            -V mainfont="DejaVu Sans" \
            --pdf-engine=xelatex \
            --table-of-contents \
            "temp-report-for-pdf.md" \
            -o "relatorio-${{ env.NOME_REPOSITORIO }}.pdf"

      - name: 11. Publicar relat√≥rios finais
        uses: actions/upload-artifact@v4
        with:
          name: Relatorio-Seguranca-${{ env.NOME_REPOSITORIO }}
          path: |
            relatorio-${{ env.NOME_REPOSITORIO }}.md
            relatorio-${{ env.NOME_REPOSITORIO }}.pdf
